steps:
  # Get latest version
  - name: "us-central1-docker.pkg.dev/abby-ranson/docker/github-ops-builder"
    args: ["get-version", "${_REPO_OWNER}", "${_REPO}"]
    secretEnv: ["GITHUB_TOKEN"]
    id: "get-version"

  # Process PR info and bump version
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    args:
      - "bump-version"
      - "${_REPO_OWNER}"
      - "${_REPO}"
      - "--current-version"
      - "$$(cat current_version.txt)"
      - "--version-type"
      - "${_PR_TYPE}"
      - "--is-merge"
      - "${_IS_MERGE}"
      - "--pr-number"
      - "${_PR_NUMBER}"
    secretEnv: ["GITHUB_TOKEN"]
    id: "bump-version"
    waitFor: ["get-version"]

  # Update pyproject.toml version
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "sh"
    args:
      - "-c"
      - make bump-version NEW_VERSION=$$(cat new_version.txt)
    id: "update-version"
    waitFor: ["bump-version"]

  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "make"
    args: ["install"]
    id: "install"
    waitFor: ["update-version"]

  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "make"
    args: ["lint"]
    id: "lint"
    waitFor: ["install"]

  # Build package
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "make"
    args: ["build"]
    id: "build"
    waitFor:
      ["lint"]

      # Debug build output
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "Built package contents:"
        ls -R dist/
        echo "Static directory after build:"
        ls -R src/ovpn_portal/static/
    id: "debug-build"
    waitFor: ["build"]

  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "make"
    args: ["coverage"]
    env:
      - "CLIENT_ID=test-client-id"
      - "ALLOWED_DOMAIN=test.com"
      - "EXTERNAL_IP=1.2.3.4"
    secretEnv: ["CODECOV_TOKEN"]
    id: "test"
    waitFor: ["build"]

  # Publish to PyPI if this is a merge to main
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/dev-tools-builder:basic"
    entrypoint: "bash"
    args:
      - "-c"
      - make publish PUBLISH=${_IS_MERGE}
    secretEnv: ["PYPI_TOKEN"]
    id: "publish"
    waitFor: ["test"]

  # Create GitHub release
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    args:
      - "create-release"
      - "${_REPO_OWNER}"
      - "${_REPO}"
      - "--current-version"
      - "$$(cat new_version.txt)"
      - "--is-prod"
      - "${_IS_MERGE}"
      - "--skip-asset"
    secretEnv: ["GITHUB_TOKEN"]
    id: "create-release"
    waitFor: ["publish"]

  # Update parent repo submodule
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    args:
      - "update-submodule"
      - "${_REPO_OWNER}"
      - "${_REPO}"
      - "--parent-repo"
      - "${_PARENT_REPO}"
      - "--submodule-path"
      - "${_SUBMODULE_PATH}"
      - "--current-version"
      - "$$(cat new_version.txt)"
      - "--is-merge"
      - "${_IS_MERGE}"
    secretEnv: ["GITHUB_TOKEN"]
    id: "update-submodule"
    waitFor: ["create-release"]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: "GITHUB_TOKEN"
    - versionName: projects/$PROJECT_ID/secrets/pypi_token/versions/latest
      env: "PYPI_TOKEN"
    - versionName: projects/$PROJECT_ID/secrets/gcp_ovpn_portal_codecov_token/versions/latest
      env: "CODECOV_TOKEN"

substitutions:
  _PATH: '\$PATH'
  _PR_TYPE: "timestamp"
  _REPO: "gcp-ovpn-portal"
  _REPO_OWNER: ""
  _IS_MERGE: "false"
  _PR_NUMBER: ""
  _PARENT_REPO: "portfolio" # Parent repository name
  _SUBMODULE_PATH: "apps/web/gcp-ovpn-portal" # Path to submodule in parent repo
